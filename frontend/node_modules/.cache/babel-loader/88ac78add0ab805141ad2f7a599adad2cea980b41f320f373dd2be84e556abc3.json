{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n\n// Signup\nexport async function signup(data) {\n  const res = await fetch(`${API_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\n// Login\nexport async function login(data) {\n  const res = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n\n// Get Account Info\nexport async function getAccount(token) {\n  const res = await fetch(`${API_URL}/account`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.json();\n}\n\n// Place Trade\nexport async function placeTrade(token, symbol, side, amount, take_profit, stop_loss) {\n  const res = await fetch(`${API_URL}/trade`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      symbol,\n      side,\n      amount,\n      take_profit,\n      stop_loss\n    })\n  });\n  return res.json();\n}\n\n// Get Trades\nexport async function getTrades(token) {\n  const res = await fetch(`${API_URL}/trades`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.json();\n}\n\n// Get Daily Report\nexport async function getDailyReport(token) {\n  const res = await fetch(`${API_URL}/daily-report`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.json();\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","signup","data","res","fetch","method","headers","body","JSON","stringify","json","login","getAccount","token","Authorization","placeTrade","symbol","side","amount","take_profit","stop_loss","getTrades","getDailyReport"],"sources":["C:/Trading_Bot3.0/Trading_Bot3.0/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n\n// Signup\nexport async function signup(data) {\n  const res = await fetch(`${API_URL}/signup`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\n// Login\nexport async function login(data) {\n  const res = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return res.json();\n}\n\n// Get Account Info\nexport async function getAccount(token) {\n  const res = await fetch(`${API_URL}/account`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.json();\n}\n\n// Place Trade\nexport async function placeTrade(token, symbol, side, amount, take_profit, stop_loss) {\n  const res = await fetch(`${API_URL}/trade`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ symbol, side, amount, take_profit, stop_loss }),\n  });\n  return res.json();\n}\n\n// Get Trades\nexport async function getTrades(token) {\n  const res = await fetch(`${API_URL}/trades`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.json();\n}\n\n// Get Daily Report\nexport async function getDailyReport(token) {\n  const res = await fetch(`${API_URL}/daily-report`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.json();\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAExE;AACA,OAAO,eAAeC,MAAMA,CAACC,IAAI,EAAE;EACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,SAAS,EAAE;IAC3CQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOC,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeC,KAAKA,CAACT,IAAI,EAAE;EAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,QAAQ,EAAE;IAC1CQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOC,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeE,UAAUA,CAACC,KAAK,EAAE;EACtC,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,UAAU,EAAE;IAC5CS,OAAO,EAAE;MAAEQ,aAAa,EAAE,UAAUD,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOV,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeK,UAAUA,CAACF,KAAK,EAAEG,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAE;EACpF,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,QAAQ,EAAE;IAC1CQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAE,UAAUD,KAAK;IAChC,CAAC;IACDN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEO,MAAM;MAAEC,IAAI;MAAEC,MAAM;MAAEC,WAAW;MAAEC;IAAU,CAAC;EACvE,CAAC,CAAC;EACF,OAAOjB,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeW,SAASA,CAACR,KAAK,EAAE;EACrC,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,SAAS,EAAE;IAC3CS,OAAO,EAAE;MAAEQ,aAAa,EAAE,UAAUD,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOV,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeY,cAAcA,CAACT,KAAK,EAAE;EAC1C,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,eAAe,EAAE;IACjDS,OAAO,EAAE;MAAEQ,aAAa,EAAE,UAAUD,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOV,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}