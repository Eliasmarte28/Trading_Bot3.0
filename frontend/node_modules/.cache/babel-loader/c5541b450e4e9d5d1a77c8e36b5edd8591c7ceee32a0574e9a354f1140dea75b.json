{"ast":null,"code":"import axios from \"axios\";\n\n// Set the base URL for all axios requests\naxios.defaults.baseURL = \"http://localhost:8000\";\n\n// Login without 2FA (initial attempt)\nexport function login(username, password, apiKey, apiKeyPassword, useDemo) {\n  return axios.post(\"/login\", {\n    username,\n    password,\n    api_key: apiKey,\n    api_key_password: apiKeyPassword,\n    use_demo: useDemo\n  });\n}\n\n// Login with 2FA (OTP)\nexport function login2fa(username, password, apiKey, apiKeyPassword, useDemo, otp) {\n  return axios.post(\"/login-2fa\", {\n    username,\n    password,\n    api_key: apiKey,\n    api_key_password: apiKeyPassword,\n    use_demo: useDemo,\n    otp\n  });\n}\n\n// Get Daily Report (requires token)\nexport function getDailyReport(token) {\n  return axios.get(\"/daily-report\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\n// Get Account Info (requires token)\nexport function getAccount(token) {\n  return axios.get(\"/account\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\n// Place Trade (requires token)\n// Call this with individual arguments, NOT an object:\nexport function placeTrade(token, symbol, side, amount, take_profit, stop_loss) {\n  return axios.post(\"/trade\", {\n    symbol,\n    side,\n    amount,\n    take_profit,\n    stop_loss\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\n// Get Trades (requires token)\nexport function getTrades(token) {\n  return axios.get(\"/trades\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}","map":{"version":3,"names":["axios","defaults","baseURL","login","username","password","apiKey","apiKeyPassword","useDemo","post","api_key","api_key_password","use_demo","login2fa","otp","getDailyReport","token","get","headers","Authorization","getAccount","placeTrade","symbol","side","amount","take_profit","stop_loss","getTrades"],"sources":["C:/Trading_Bot3.0/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Set the base URL for all axios requests\r\naxios.defaults.baseURL = \"http://localhost:8000\";\r\n\r\n// Login without 2FA (initial attempt)\r\nexport function login(username, password, apiKey, apiKeyPassword, useDemo) {\r\n  return axios.post(\"/login\", {\r\n    username,\r\n    password,\r\n    api_key: apiKey,\r\n    api_key_password: apiKeyPassword,\r\n    use_demo: useDemo,\r\n  });\r\n}\r\n\r\n// Login with 2FA (OTP)\r\nexport function login2fa(username, password, apiKey, apiKeyPassword, useDemo, otp) {\r\n  return axios.post(\"/login-2fa\", {\r\n    username,\r\n    password,\r\n    api_key: apiKey,\r\n    api_key_password: apiKeyPassword,\r\n    use_demo: useDemo,\r\n    otp,\r\n  });\r\n}\r\n\r\n// Get Daily Report (requires token)\r\nexport function getDailyReport(token) {\r\n  return axios.get(\"/daily-report\", {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n}\r\n\r\n// Get Account Info (requires token)\r\nexport function getAccount(token) {\r\n  return axios.get(\"/account\", {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n}\r\n\r\n// Place Trade (requires token)\r\n// Call this with individual arguments, NOT an object:\r\nexport function placeTrade(token, symbol, side, amount, take_profit, stop_loss) {\r\n  return axios.post(\"/trade\", {\r\n    symbol,\r\n    side,\r\n    amount,\r\n    take_profit,\r\n    stop_loss,\r\n  }, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n}\r\n\r\n// Get Trades (requires token)\r\nexport function getTrades(token) {\r\n  return axios.get(\"/trades\", {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACA,OAAO,SAASC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,EAAEC,OAAO,EAAE;EACzE,OAAOR,KAAK,CAACS,IAAI,CAAC,QAAQ,EAAE;IAC1BL,QAAQ;IACRC,QAAQ;IACRK,OAAO,EAAEJ,MAAM;IACfK,gBAAgB,EAAEJ,cAAc;IAChCK,QAAQ,EAAEJ;EACZ,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASK,QAAQA,CAACT,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,EAAEC,OAAO,EAAEM,GAAG,EAAE;EACjF,OAAOd,KAAK,CAACS,IAAI,CAAC,YAAY,EAAE;IAC9BL,QAAQ;IACRC,QAAQ;IACRK,OAAO,EAAEJ,MAAM;IACfK,gBAAgB,EAAEJ,cAAc;IAChCK,QAAQ,EAAEJ,OAAO;IACjBM;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EACpC,OAAOhB,KAAK,CAACiB,GAAG,CAAC,eAAe,EAAE;IAChCC,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASI,UAAUA,CAACJ,KAAK,EAAE;EAChC,OAAOhB,KAAK,CAACiB,GAAG,CAAC,UAAU,EAAE;IAC3BC,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA;AACA,OAAO,SAASK,UAAUA,CAACL,KAAK,EAAEM,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAE;EAC9E,OAAO1B,KAAK,CAACS,IAAI,CAAC,QAAQ,EAAE;IAC1Ba,MAAM;IACNC,IAAI;IACJC,MAAM;IACNC,WAAW;IACXC;EACF,CAAC,EAAE;IACDR,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASW,SAASA,CAACX,KAAK,EAAE;EAC/B,OAAOhB,KAAK,CAACiB,GAAG,CAAC,SAAS,EAAE;IAC1BC,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}